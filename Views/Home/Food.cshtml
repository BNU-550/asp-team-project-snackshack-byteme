@model IEnumerable<Snack_Shack.Models.Food>

@{
    ViewData["Title"] = "Index";
}

<h1>Food Menu</h1>

<div class="card-deck">
    <div class="card">
        <img class="card-img-top" src=".../100px200/" alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">This is a longer card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
            <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
        </div>
    </div>
    <div class="card">
        <img class="card-img-top" src=".../100px200/" alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">This card has supporting text below as a natural lead-in to additional content.</p>
            <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
        </div>
    </div>
    <div class="card">
        <img class="card-img-top" src=".../100px200/" alt="Card image cap">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>
            <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
        </div>
    </div>
</div>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FoodCategory)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Calories)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContainsNuts)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContainsGluten)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsVegetarian)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsVegan)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Product)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FoodCategory)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Calories)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContainsNuts)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContainsGluten)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsVegetarian)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsVegan)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Product.Name)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.FoodID">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.FoodID">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.FoodID">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
